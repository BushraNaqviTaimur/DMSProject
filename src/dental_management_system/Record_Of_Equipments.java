package dental_management_system;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bushra
 */
public class Record_Of_Equipments extends javax.swing.JFrame
{
    User user;
    ResultSet rs; 
    public Record_Of_Equipments()
    {
        initComponents();
        this.setLocationRelativeTo(null); // for centering form on screen
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE); //does not close app on exit of window
        
    }
    public Record_Of_Equipments(User user)
    {
             initComponents();
            this.setLocationRelativeTo(null); // for centering form on screen
            this.setDefaultCloseOperation(DISPOSE_ON_CLOSE); //does not close app on exit of window
            
            

            this.user = user;
            if("Receptionist".equals(user.userType))
        {
            Receptionist recept = new Receptionist(user.userName,user.password,user.userType);
            
            
            
            
            
            try
                {

                rs = recept.ShowAllEquipmentRecord();
                  
                
                while(jTable1_equipmentsRecord.getRowCount() > 0) 
                {
                    ((DefaultTableModel) jTable1_equipmentsRecord.getModel()).removeRow(0);

                }


                int columns = rs.getMetaData().getColumnCount();


                while(rs.next())
                {  

                    Object[] row = new Object[columns];
                    for (int i = 1; i <= columns; i++)
                    {  
                        row[i - 1] = rs.getObject(i);
                    }
                    ((DefaultTableModel) jTable1_equipmentsRecord.getModel()).insertRow(rs.getRow()-1,row);
                    
                    
                    //for future use
                    //((DefaultTableModel) jTable1_equipmentsRecord.getModel()).addRow(new Object[]{"[enter new record]","[enter new record]","[enter new record]","[enter new record]"}); //initializing new blank row in table for new record enter
                }

            }
        catch (Exception e)
        {
                
        }  
            
        }
        
        
        if("Admin".equals(user.userType))
        {
           Admin admin = new Admin(user.userName,user.password,user.userType);
          
           
            
            
                try
                {
                    
                rs = admin.ShowAllEquipmentRecord();


                while(jTable1_equipmentsRecord.getRowCount() > 0) 
                {
                    ((DefaultTableModel) jTable1_equipmentsRecord.getModel()).removeRow(0);

                }


                int columns = rs.getMetaData().getColumnCount();


                while(rs.next())
                {  

                    Object[] row = new Object[columns];
                    for (int i = 1; i <= columns; i++)
                    {  
                        row[i - 1] = rs.getObject(i);
                    }
                    ((DefaultTableModel) jTable1_equipmentsRecord.getModel()).insertRow(rs.getRow()-1,row);
                    
                    //for future use
                    //((DefaultTableModel) jTable1_equipmentsRecord.getModel()).addRow(new Object[]{"[enter new record]","[enter new record]","[enter new record]","[enter new record]"}); //initializing new blank row in table for new record enter
                }
                
                

                }
                catch (Exception e)
                {

                }  
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1_equipmentsRecord = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1_search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1_updaterecord = new javax.swing.JMenuItem();
        jMenuItem2_add = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3_refresh = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 23, 735, 480));
        setPreferredSize(new java.awt.Dimension(735, 480));
        setResizable(false);
        getContentPane().setLayout(null);

        jTable1_equipmentsRecord.setBackground(new java.awt.Color(0, 102, 255));
        jTable1_equipmentsRecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Equipment", "State", "Quantity", "Cost"
            }
        ));
        jTable1_equipmentsRecord.setBounds(new java.awt.Rectangle(0, 0, 900, 800));
        jTable1_equipmentsRecord.setPreferredSize(new java.awt.Dimension(900, 800));
        jScrollPane1.setViewportView(jTable1_equipmentsRecord);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 80, 720, 340);

        jTextField1.setBackground(new java.awt.Color(0, 153, 255));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(180, 10, 430, 60);

        jButton1_search.setText("Search");
        jButton1_search.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_searchActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1_search);
        jButton1_search.setBounds(620, 10, 100, 60);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setText("Search Equipment Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 20, 170, 40);

        jMenu1.setText("File");

        jMenuItem1_updaterecord.setText("Update Record");
        jMenuItem1_updaterecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1_updaterecordActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1_updaterecord);

        jMenuItem2_add.setText("Add record");
        jMenuItem2_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2_addActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2_add);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem3_refresh.setText("Refresh");
        jMenuItem3_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3_refreshActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3_refresh);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_searchActionPerformed

        Receptionist recept = new Receptionist(user.userName,user.password,user.userType);
        rs = recept.SearchEquipmentData(jTextField1.getText());

        try
        {

            while(jTable1_equipmentsRecord.getRowCount() > 0)
            {
                ((DefaultTableModel) jTable1_equipmentsRecord.getModel()).removeRow(0);
            }
            int columns = rs.getMetaData().getColumnCount();
            while(rs.next())
            {
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++)
                {
                    row[i - 1] = rs.getObject(i);
                }
                ((DefaultTableModel) jTable1_equipmentsRecord.getModel()).insertRow(rs.getRow()-1,row);
            }

        }
        catch (Exception e)
        {

        }
    }//GEN-LAST:event_jButton1_searchActionPerformed

    private void jMenuItem1_updaterecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1_updaterecordActionPerformed
        
        
        
                
          if(jTable1_equipmentsRecord.getRowCount()==1)
                  {
                
                Medicines_and_Equipments data = new Medicines_and_Equipments();

                data.Equipment_name = jTable1_equipmentsRecord.getValueAt(0,0).toString();
                data.State = jTable1_equipmentsRecord.getValueAt(0,1).toString();
                data.EQuantity = Integer.parseInt(jTable1_equipmentsRecord.getValueAt(0,2).toString());
                data.ECost = Integer.parseInt(jTable1_equipmentsRecord.getValueAt(0,3).toString());


                Receptionist recept = new  Receptionist(user.userName,user.password,user.userType);

                recept.UpdateEquipmentData(data);

                JOptionPane.showMessageDialog(rootPane, "Record updated successfully.");
                
                }
            
        else
        {
            JOptionPane.showMessageDialog(rootPane, "You must first search for a specific equipment to update.");
        }
    }//GEN-LAST:event_jMenuItem1_updaterecordActionPerformed

    private void jMenuItem2_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2_addActionPerformed
        
        //int newRecordRow = jTable1_equipmentsRecord.getRowCount()-1; // saving for future
        
        new InsertEquipmentRecordForm(user).setVisible(true);
    }//GEN-LAST:event_jMenuItem2_addActionPerformed

    private void jMenuItem3_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3_refreshActionPerformed
         jTextField1.setText("");
         this.jButton1_searchActionPerformed(evt);  
    }//GEN-LAST:event_jMenuItem3_refreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Record_Of_Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Record_Of_Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Record_Of_Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Record_Of_Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Record_Of_Equipments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1_updaterecord;
    private javax.swing.JMenuItem jMenuItem2_add;
    private javax.swing.JMenuItem jMenuItem3_refresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1_equipmentsRecord;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
